@{
    Layout = "_ManageLayout.cshtml";
}

@model Drupal.ParentPortal.Models.ManageEventViewModel

@{
    ViewBag.Title = "Manage Events";
}

@*@Styles.Render("~/Content/fullcalendarcss")
    @Scripts.Render("~/bundles/fullcalendar")*@
<div style="position: relative;">
    <div class="loader" id="calendarloader"></div>
    <div class="calendar-container">
        <div id='calendar'></div>
    </div>
</div>
    <div class="panel panel-default" style="margin-top:10px;">
        <div class="modal-header panel-heading" data-toggle="collapse" data-target="#settings">
            <h4 class="modal-title" id="eventDetailsModalLabel">Settings</h4>
        </div>
        <div class="panel-collapse collapse panel-body" id="settings">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4">
                    <label class="control-label" for="SmtpServer_Value">SMTP Server</label>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SmtpServer.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SmtpServer.Value, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SmtpServer.ConfigurationItemId)
                    @Html.HiddenFor(model => model.SmtpServer.Module)
                    @Html.HiddenFor(model => model.SmtpServer.Key)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label class="control-label" for="SmtpServer_Value">SMTP Login User</label>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SmtpLoginUser.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SmtpLoginUser.Value, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SmtpLoginUser.ConfigurationItemId)
                    @Html.HiddenFor(model => model.SmtpLoginUser.Module)
                    @Html.HiddenFor(model => model.SmtpLoginUser.Key)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label class="control-label" for="SmtpServer_Value">SMTP Login Password</label>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SmtpLoginPassword.Value, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", @type = "password" } })
                    @Html.ValidationMessageFor(model => model.SmtpLoginPassword.Value, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SmtpLoginPassword.ConfigurationItemId)
                    @Html.HiddenFor(model => model.SmtpLoginPassword.Module)
                    @Html.HiddenFor(model => model.SmtpLoginPassword.Key)
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <label class="control-label" for="SmtpServer_Value">Send From Email</label>
                </div>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SendFromEmailAddress.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SendFromEmailAddress.Value, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.SendFromEmailAddress.ConfigurationItemId)
                    @Html.HiddenFor(model => model.SendFromEmailAddress.Module)
                    @Html.HiddenFor(model => model.SendFromEmailAddress.Key)
                </div>
            </div>
            <br />
            <div class="">
                <div class="row">
                    <div class="col-md-10">
                        <div class="alert alert-success alert-dismissible pull-right" role="alert" id="saveSucceededAlert" hidden="hidden" style="height: 30px;line-height:30px;margin-bottom: 1px;padding:0px 15px;">
                            <button type="button" class="close" onclick="javascript:$('#saveSucceededAlert').hide()" aria-label="Close" style="height: 30px;line-height:30px;margin-bottom: 1px;padding:0px 15px;">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <strong>Success!</strong> You successfully saved the Event management settings.
                        </div>
                        <div class="alert alert-danger alert-dismissible pull-right" role="alert" id="saveFailedAlert" hidden="hidden" style="height: 30px;line-height:30px;margin-bottom: 1px;padding:0px 15px;">
                            <button type="button" class="close" onclick="javascript:$('#saveFailedAlert').hide()" aria-label="Close" style="height: 30px;line-height:30px;margin-bottom: 1px;padding:0px 15px;">
                                <span aria-hidden="true">&times;</span>
                            </button>
                            <strong>Failed!</strong> Your changes were not saved. Please try again.
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary btn-ok pull-right" id="btnSave" data-loading-text="<i class='fa fa-circle-o-notch fa-spin'></i> Saving">Save</button>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <!-- Modal Dialog -->
    <div class="modal fade" id="eventDetailsModal" tabindex="-1" role="dialog" aria-labelledby="eventDetailsModalLabel" aria-hidden="true">

    </div>
    <script type="text/javascript">

    // Some sort of loading indicator while wiring up scripts

    $('document').ready(function () {
        InitSubmit();
        InitCalendar();
    });

    function InitSubmit() {
        //$("#saveSucceededAlert").alert();
    }

    function InitCalendar() {

        $('#calendar').fullCalendar({
            header: {
                left: 'prev,next,today',
                center: 'title',
                right: 'month,agendaWeek,agendaDay,listWeek'
            },
            footer: {
                left: '',
                center: '',
                right: 'newEvent'
            },
            timezone: 'UTC',
            //defaultDate: '2016-12-12',
            navLinks: true, // can click day/week names to navigate views
            editable: true,
            contentHeight: 400,
            eventLimit: true, // allow "more" link when too many events
            //events: JSON.parse(events),
            events: function (start, end, timezone, callback) {
                $('#calendarloader').show();
                var json = { start: start.toISOString(), end: end.toISOString() };
                $.ajax({
                    type: "post",
                    data: json,
                    url: '@Url.Action("GetEvents", "Manage")',
                    success: function (d) {
                        callback(d);
                        $('#calendarloader').hide();
                    },
                    error: function (e) {
                        $('#calendarloader').hide();
                        console.log(e);
                    }
                });
            },
            eventRender: function (event, element) {
                $(element).click(function () {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("EventDetails")',
                        cache: false,
                        data: { id: event.schooleventid },
                        success: function (viewHTML) {
                            $("#eventDetailsModal").html(viewHTML);
                            $('#eventDetailsModal').modal();
                        },
                        error: function (xhr) {
                            //alert('ERROR: ' + xhr.statusText);
                            console.log(xhr);
                        },

                    }).done(function () {
                        // do something after success/error ?
                    });
                    @*$(".modal-content").html('')
                        .load("@Url.Action("EventDetails", "Manage")", { 'id': event.schooleventid }, function (e,s,i) {
                            $('#eventDetailsModal').modal();
                            SetupDateTimePickers();
                    });*@
                });
            }, customButtons: {
                newEvent: {
                    text: 'Add Event',
                    click: function () {
                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("EventDetails")',
                            cache: false,
                            data: { id: "" },
                            success: function (viewHTML) {
                                $("#eventDetailsModal").html(viewHTML);
                                $('#eventDetailsModal').modal();
                            },
                            error: function (xhr) {
                                //alert('ERROR: ' + xhr.statusText);
                                console.log(xhr);
                            },

                        }).done(function () {
                            // do something after success/error ?
                        });

                        @*$(".modal-content").html('')
                            .load("@Url.Action("EventDetails", "Manage")", { 'id': "" }, function (e,s,i) {
                                $('#eventDetailsModal').modal();
                                SetupDateTimePickers();
                            });*@
                    }
                }
            }
        });
    }


    function SaveSucceeded(data) {
        if (data.success) {
            $("#btnSave").button('reset');
            $("#saveSucceededAlert").alert();
            $("#saveSucceededAlert").fadeTo(4000, 500).slideUp(500, function () {
                $("#saveSucceededAlert").slideUp(500);
            });
        }
    }
    function SaveFailed(data) {
        if (!data.success) {
            $("#btnSave").button('reset');
            $("#saveFailedAlert").alert();
            $("#saveFailedAlert").fadeTo(4000, 500).slideUp(500, function () {
                $("#saveFailedAlert").slideUp(500);
            });
        }

    }
    </script>

